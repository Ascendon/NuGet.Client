queue:
  name: VSEng-MicroBuildVS2017
  demands: 
    - DotNetFramework
    - msbuild


#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\scripts\cibuild\ConfigureVstsBuild.ps’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘SigningType’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\key’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\artifacts\TestResult’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\artifacts\TestResult’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\test\NuGet.Clients.Tests\NuGet.CommandLine.Test\bin\$(BuildConfiguration)\net46\win7-x6’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘BuildOutputTargetPath)\artifacts\$(VsixPublishDir)\$(NupkgOutputDir’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\scripts\cibuild\CreateEndToEndTestPackage.ps’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘BuildOutputTargetPath)\artifact’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘CIRoot)\PLOC\$(Build.SourceBranchName)\$(Build.BuildNumber’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\scripts\cibuild\PublishArtifactsFromVsts.ps’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\artifacts\symbolstoinde’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘BuildOutputTargetPath)\symbol’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\artifacts\symbolstoinde’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\artifacts\VS1’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\scripts\cibuild\BuildValidator.ps’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build definition references an undefined variable named ‘Build.Repository.LocalPath)\scripts\cibuild\BuildValidator.ps’. Create or edit the build definition for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
steps:
- task: PowerShell@1
  inputs:
    scriptType: 'inlineScript'
    inlineScript: |
          # Display all environment variables
          # This should display all the build variables as well.
          
          Get-ChildItem env:* | sort-object name

- task: PowerShell@1
  inputs:
    scriptName: '.\configure.ps1'
    arguments: '-Force -CI'

- task: PowerShell@1
  inputs:
    scriptName: '$(Build.Repository.LocalPath)\scripts\cibuild\ConfigureVstsBuild.ps1'
    arguments: '-BuildCounterFile $(BuildCounterFile) -BuildInfoJsonFile $(BuildInfoJsonFile) -BuildRTM $(BuildRTM)'

- task: MicroBuildLocalizationPlugin@1
  inputs:
    version: '1.0.388'

- task: MicroBuildSigningPlugin@1
  inputs:
    signType: '$(SigningType)'
  condition: and(succeeded(), in(variables['SigningType'], 'Test', 'Real'))

- task: MicroBuildSwixPlugin@1

- task: CopyFiles@2
  inputs:
    SourceFolder: '\\fsu\shares\NuGet\PublicKeys'
    Contents: |
          35MSSharedLib1024.snk
          NuGetKey.snk
    TargetFolder: '$(Build.Repository.LocalPath)\keys'
    CleanTargetFolder: 'true'
    OverWrite: 'true'
    flattenFolders: 'true'

- task: MSBuild@1
  inputs:
    solution: 'build\build.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:RestoreVS15 /p:BuildNumber=$(Revision) /p:BuildRTM=$(BuildRTM) /v:m'

- task: MSBuild@1
  inputs:
    solution: 'build\build.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:BuildVS15NoVSIX /p:NUGET_PFX_PATH=$(Build.Repository.LocalPath)\keys\NuGetKey.snk /p:MS_PFX_PATH=$(Build.Repository.LocalPath)\keys\35MSSharedLib1024.snk  /p:BuildRTM=$(BuildRTM) /p:BuildNumber=$(Revision)'

- task: MSBuild@1
  inputs:
    solution: 'build\build.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:CoreUnitTests;UnitTestsVS15 /p:NUGET_PFX_PATH=$(Build.Repository.LocalPath)\keys\NuGetKey.snk /p:MS_PFX_PATH=$(Build.Repository.LocalPath)\keys\35MSSharedLib1024.snk  /p:BuildRTM=$(BuildRTM) /p:BuildNumber=$(Revision) /p:TestResultOutputFormat=xml'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'true'), ne(variables['PB_SkipTests'], 'true')) 

- task: PublishTestResults@2
  inputs:
    testRunner: 'XUnit'
    testResultsFiles: '*.xml'
    searchFolder: '$(Build.Repository.LocalPath)\artifacts\TestResults'
    mergeTestResults: 'true'
  condition:  and(succeededOrFailed(),eq(variables['BuildRTM'], 'true'), ne(variables['PB_SkipTests'], 'true'))

- task: PublishTestResults@2
  inputs:
    testRunner: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: '$(Build.Repository.LocalPath)\artifacts\TestResults'
    mergeTestResults: 'true'
  condition:  and(succeededOrFailed(),eq(variables['BuildRTM'], 'true'), ne(variables['PB_SkipTests'], 'true'))

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.Repository.LocalPath)\test\NuGet.Clients.Tests\NuGet.CommandLine.Test\bin\$(BuildConfiguration)\net46\win7-x64'
    ArtifactName: 'NuGet.CommandLine.Test'
    ArtifactType: 'Container'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'true')) 

- task: MSBuild@1
  inputs:
    solution: 'build\loc.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:AfterBuild'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false')) 

- task: MSBuild@1
  inputs:
    solution: 'build\sign.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:AfterBuild'
  condition: and(succeeded(), in(variables['SigningType'], 'Test', 'Real'))

- task: MSBuild@1
  inputs:
    solution: 'build\build.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:Pack  /p:BuildRTM=$(BuildRTM) /p:ExcludeTestProjects=$(BuildRTM) /p:BuildNumber=$(Revision)'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'artifacts\$(NupkgOutputDir)'
    Contents: '*.nupkg'
    TargetFolder: '$(BuildOutputTargetPath)\artifacts\$(VsixPublishDir)\$(NupkgOutputDir)'
  condition: and(succeeded(), contains(variables['PB_PublishType'], 'drop'))

- task: MSBuild@1
  inputs:
    solution: 'build\build.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:BuildVS15VSIX /p:BuildRTM=$(BuildRTM) /p:ExcludeTestProjects=$(BuildRTM) /p:IsCIBuild=true'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false')) 

- task: MSBuild@1
  inputs:
    solution: 'build\sign.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/t:AfterBuild /p:SignVsix=true'
  condition:  and(succeeded(), eq(variables['BuildRTM'], 'false'), in(variables['SigningType'], 'Test', 'Real'))

- task: MSBuild@1
  inputs:
    solution: 'setup\Microsoft.VisualStudio.NuGet.Core.vsmanproj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false')) 

- task: PowerShell@1
  inputs:
    scriptName: '$(Build.Repository.LocalPath)\scripts\cibuild\CreateEndToEndTestPackage.ps1'
    arguments: '-c $(BuildConfiguration) -tv 15 -out $(Build.Repository.LocalPath)\artifacts\VS15'
    failOnStandardError: 'false'
  continueOnError: true
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false')) 

- task: CopyFiles@2
  inputs:
    SourceFolder: 'artifacts'
    Contents: |
          $(VsixPublishDir)\NuGet.exe
          $(VsixPublishDir)\NuGet.pdb
          $(VsixPublishDir)\Microsoft.VisualStudio.NuGet.Core.json
          $(VsixPublishDir)\NuGet.Tools.vsix
          $(VsixPublishDir)\EndToEnd.zip
    TargetFolder: '$(BuildOutputTargetPath)\artifacts'
  condition: and(succeeded(), contains(variables['PB_PublishType'], 'drop'))

- task: MSBuild@1
  inputs:
    solution: 'setup/Microsoft.VisualStudio.NuGet.BuildTools.vsmanproj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/p:BuildNumber=$(Revision)'
  condition:  and(succeeded(), eq(variables['BuildRTM'], 'false'))

- task: CopyFiles@2
  inputs:
    SourceFolder: 'artifacts\'
    Contents: '**\*.lcg'
    TargetFolder: '$(CIRoot)\PLOC\$(Build.SourceBranchName)\$(Build.BuildNumber)'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'drop')) 

- task: PowerShell@1
  inputs:
    scriptName: '$(Build.Repository.LocalPath)\scripts\cibuild\PublishArtifactsFromVsts.ps1'
    arguments: '-NuGetBuildFeedUrl $(NuGetBuildFeed) -NuGetBuildSymbolsFeedUrl $(NuGetBuildSymbolsFeed) -DotnetCoreFeedUrl $(DotnetCoreBuildFeed) -DotnetCoreSymbolsFeedUrl $(DotnetCoreSymbolsFeed) -NuGetBuildFeedApiKey $(NuGetBuildApiKey) -DotnetCoreFeedApiKey $(DotnetCoreApiKey)'
    failOnStandardError: 'false'
  continueOnError: true
  condition:  and(succeeded(),eq(variables['PublishArtifactsToMyGet'], 'true'), eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'myget')) 

- task: MSBuild@1
  inputs:
    solution: 'build\publish.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '/p:FeedUrl=$(PB_PublishBlobFeedUrl) /p:FeedApiKey=$(PB_PublishBlobFeedKey) /p:ManifestBranch=$(SourceBranch) /p:ManifestCommit=$(SourceVersion) /p:ManifestBuildId=$(OfficialBuildId)'
  condition:  and(succeeded(), eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'blob')) 

- task: MSBuild@1
  inputs:
    solution: 'build\symbols.proj'
    msbuildVersion: '15.0'
    configuration: '$(BuildConfiguration)'
  condition:  and(succeeded(),eq(variables['BuildRTM'], 'false')) 

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)\artifacts\symbolstoindex'
    Contents: '**\*'
    TargetFolder: '$(BuildOutputTargetPath)\symbols'
  condition: and(succeeded(),eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'drop'))

- task: ms-vscs-artifact.build-tasks.artifactSymbolTask-1.artifactSymbolTask@0
  inputs:
    symbolServiceURI: 'https://microsoft.artifacts.visualstudio.com/DefaultCollection'
    requestName: 'CollectionId/$(System.CollectionId)/ProjectId/$(System.TeamProjectId)/$(TeamName)/BuildId/$(Build.BuildId)'
    sourcePath: '$(Build.Repository.LocalPath)\artifacts\symbolstoindex'
    detailedLog: 'true'
    expirationInDays: '45'
    usePat: 'false'
  condition: and(succeeded(),eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'symweb'))

- task: MicroBuildUploadVstsDropFolder@1
  inputs:
    DropFolder: '$(Build.Repository.LocalPath)\artifacts\VS15'
  condition: and(succeeded(),eq(variables['BuildRTM'], 'false'), contains(variables['PB_PublishType'], 'vsts'))

- task: PowerShell@1
  inputs:
    scriptName: '$(Build.Repository.LocalPath)\scripts\cibuild\BuildValidator.ps1'
    arguments: '-BuildRTM $(BuildRTM) -BuildOutputTargetPath $(BuildOutputTargetPath) -ValidateVsix'

- task: PowerShell@1
  inputs:
    scriptName: '$(Build.Repository.LocalPath)\scripts\cibuild\BuildValidator.ps1'
    arguments: '-BuildRTM $(BuildRTM) -BuildOutputTargetPath $(BuildOutputTargetPath)'

- task: MicroBuildCleanup@1
  condition: succeededOrFailed()

- task: PowerShell@1
  inputs:
    scriptType: 'inlineScript'
    arguments: '-BuildOutputTargetPath $(BuildOutputTargetPath)'
    inlineScript: |
          param(
          [string]$BuildOutputTargetPath
          )
          Remove-Item -Path $BuildOutputTargetPath -Force -Recurse
  condition: failed()


